- pipeline:
    name: check
    description: |
      Newly opened pull requests enter this pipeline to receive an
      initial verification
    manager: independent
    trigger:
      github:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
        - event: check_run
    start:
      github:
        check: 'in_progress'
        comment: false
    success:
      github:
        check: 'success'
    failure:
      github:
        check: 'failure'

- pipeline:
    name: gate
    description: >
      GitHub pull requests or Gerrit changes that have been reviewed are
      enqueued in order in this pipeline, and if they pass tests in Zuul, will
      be merged.
      For GitHub pull requests, this pipeline can be retriggered manually by
      adding a comment "regate" to the pull request.
      For Gerrit changes, you have to retrigger the check pipeline. This
      will run the check pipeline and automatically (if successful)
      the gate pipeline after that.
    manager: dependent
    success-message: gate jobs succeeded
    failure-message: gate jobs failed
    start-message: "starting"
    post-review: true
    precedence: high
    window-floor: 9
    supercedes:
      - check
    require:
      github:
        open: true
        current-patchset: true
        review:
          - type: approved
        label: merge
    reject:
      github:
        review:
          - type: changes_requested
    trigger:
      github:
        - event: pull_request
          action: status
          status:
            - .*:success
        - event: pull_request
          action: comment
          comment: (?i)^\s*regate\s*$
        - event: pull_request_review
          action: submitted
          state: approved
        # Why gating when a review is dismissed?
        # The usual use case is to dismiss a negative review from someone who
        # is on vacation. After that, gating shall happen if there is also one
        # positive review, thus the trigger.
        - event: pull_request_review
          action: dismissed
          state: request_changes
        - event: pull_request
          action: labeled
          label:
            - 'merge'
        # When a user selects the "Re-run check run" option
        - event: check_run
          action: requested
          check: .*/gate:.*
        # Automatically trigger gate when a successful check run is reported
        # (pipeline requirements must still be met for gate to be executed)
        - event: check_run
          action: completed
          check: .*:success
      # The parent-change-enqueued trigger makes sure that a child change
      # is enqueued together with its parent change if the dependency is
      # expressed with depends-on.
      zuul:
        - event: parent-change-enqueued
    start:
      github:
        check: in_progress
        comment: false
    success:
      github:
        check: success
        comment: false
        merge: true
    failure:
      github:
        check: failure
